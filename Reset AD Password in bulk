function Password_Request 
{
Switch (Read-Host "`n`nWould you like the password to be created automatically? Select Yes[Y] or No[N]")
{ 
"Y" {$password = (Get-Randompwd)
Write-Output $password}
"N" { $password = Read-Host "`nPassword you enter must meet the below complexity requirements: 
    `nAt least one upper case English letter [A-Z]`nAt least one lower case English letter [a-z]`nAt least one digit [0-9]`nAt least one special character (!,@,#,%,^,&)`nMinimum 13 in length.
    `nPlease enter your password"

    if (($password -cmatch 'a|b|c|d|e|f|g|h|k|m|n|o|p|r|s|t|u|v|w|x|y|z') -and ($password -cmatch 'A|B|C|D|E|F|G|H|K|M|N|O|P|R|S|T|U|V|W|X|Y|Z') -and ($password -match '\d') -and ($password.length -ge 13) -and ($password -match '!|@|#|%|^|&'))
        {Write-Output $password}

    else {Write-Host 'Password does not meet the complexity requirement'
    (Password_Request)}
    }
} 
} 


function Reset_Password
{
Import-Module activedirectory
$UserList = Read-Host 'Please provide the Path of the CSV File '
$newpass = Password_Request 
$Serv = Read-host "Please enter the Server name "
$Des = Read-Host "Please enter the description "

$ResetUsers = Import-csv $UserList

Foreach ($User in $ResetUsers)
{
$Username = $User.UserLoginID

if (Get-ADUser -Server $Serv -F {(SamAccountName -eq $Username)}) 
            { Set-ADAccountPassword -server $Serv -Identity $Username -NewPassword (ConvertTo-SecureString $newpass -AsPlainText -Force) -Reset -PassThru | Set-ADUser -ChangePasswordAtLogon $True -Description $Des 
	            if (Get-ADUser -Server $Serv -F {(Enabled -eq $False)}) 
	                {Write-Host "User $Username is in disabled state" -ForegroundColor Green} 
	               }

        else {Write-Host "User $Username doesn't exist." -ForegroundColor Yellow}

}
Write-Host
Write-Host "Password has been reset to $newpass"
Write-Host
}
